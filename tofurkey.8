.TH tofurkey 8 "Jan 2024" "v0.7"
.SH NAME
tofurkey \- Distributed sync for TCP Fastopen key rotations
.SH SYNOPSIS
.B tofurkey [\-vVno] [\-T n] [\-P /proc/sys/net/ipv4/tcp_fastopen_key] [\-i seconds] \-k /path/to/main/secret
.SH DESCRIPTION
\fBtofurkey\fR is a simple daemon which manages the timely,
synchronized, deterministic rotation of TCP Fastopen (TFO) keys across a
cluster of Linux machines.  Keys are set via the Linux 5.10+ procfs
interface for dual keys in \fI/proc/sys/net/ipv4/tcp_fastopen_key\fR. It
requires as input a long-term main secret key file which is shared
across the cluster (by you and/or your configuration/secret management
system).
.SH OPTIONS
.TP
\fB\-k\fR
REQUIRED - Path to long-term main secret file. (must have exactly 32 bytes of secret binary data.  Will be re-read every time keys are generated!)
.P
.TP
\fB\-i\fR
Interval seconds for key rotation, default is 21600 (6 hours), allowed range is 10 - 604800, must be even. (daemon wakes up to rotate keys at every half-interval of unix time to manage validity overlaps)
.P
.TP
\fB\-v\fR
Verbose output to stderr
.P
.TP
\fB\-n\fR
Dry-run mode - Data is not actually written to procfs, but everything else still happens
.P
.TP
\fB\-o\fR
One-shot mode - it will calculate the current keys and set them once and then exit. (normal mode is to remain running and rotate keys on timer intervals forever)
.P
.TP
\fB\-V\fR
Verbose and also print TFO keys (mostly for testing, this leaks short-term secrets to stderr!)
.P
.TP
\fB\-P\fR
Override default procfs output path for setting keys (mostly for testing)
.P
.TP
\fB\-T\fR
Set a fake unix time value which never changes (mostly for testing, min value 1000000)
.P
.SH MORE INFO
https://github.com/blblack/tofurkey
